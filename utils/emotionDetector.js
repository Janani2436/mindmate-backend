/**
 * Multilingual Emotion Detector тАУ English, Hindi, Tamil
 * Uses keyword-based robust matching for emotion classification.
 */

// ЁЯФд Emotion keyword dictionary
const emotionKeywords = {
  sad: [
    // English
    'sad', 'depressed', 'unhappy', 'down', 'hopeless', 'tired', 'cry', 'miserable', 'worthless',
    // Tamil
    'родрпБроХрпНроХроорпН', 'роЙроЯрпИроирпНродрпБро╡ро┐роЯрпНроЯрпЗройрпН', 'рооройроорпБроЯрпИроирпНродрпБ', 'роПрооро╛ро▒рпНро▒роорпН', 'родро╡ро┐роХрпНроХрпБроорпН',
    // Hindi
    'рдЙрджрд╛рд╕', 'рдирд┐рд░рд╛рд╢', 'рджреБрдЦреА', 'рдердХрд╛', 'рд░реВрд▓рд╛', 'рдорд╛рдпреВрд╕', 'рдмреЗрдХрд╛рд░', 'рд╡реНрдпрд░реНрде', 'рдПрдХрд╛рдХреА', 'рджреБрдЦ'
  ],
  angry: [
    'angry', 'mad', 'furious', 'frustrated', 'irritated', 'annoyed', 'rage',
    'роХрпЛрокроорпН', 'роорпБро░роЯрпНроЯрпБ', 'ро╡рпЖро▒рпБрокрпНрокрпБ', 'роЪрогрпНроЯрпИ',
    'рдЧреБрд╕реНрд╕рд╛', 'рдирд╛рд░рд╛рдЬрд╝', 'рдЪрд┐рдбрд╝рд╛', 'рдХреНрд░реЛрдзрд┐рдд', 'рдЦрд┐рдиреНрди', 'рдЭреБрдВрдЭрд▓рд╛рдпрд╛'
  ],
  anxious: [
    'anxious', 'nervous', 'worried', 'scared', 'afraid', 'panic', 'tense', 'overwhelmed',
    'рокропроорпН', 'роХро╡ро▓рпИ', 'роЕроЪрпНроЪроорпН', 'роЗроЯрпИропрпВро▒рпБ',
    'рдЪрд┐рдВрддрд╛', 'рдбрд░', 'рдШрдмрд░рд╛рдпрд╛', 'рдЕрд╢рд╛рдВрдд', 'рдмреЗрдЪреИрди', 'рднрдпрднреАрдд', 'рдкрд░реЗрд╢рд╛рди'
  ],
  happy: [
    'happy', 'joyful', 'excited', 'grateful', 'good', 'glad', 'content', 'blessed', 'love', 'great',
    'роороХро┐ро┤рпНроЪрпНроЪро┐', 'рокро┐ро░ро┐ропрооро╛рой', 'роЪроирпНродрпЛро╖рооро╛роХ', 'ро░роЪро┐роХрпНроХро┐ро▒рпЗройрпН',
    'рдЦреБрд╢', 'рдкреНрд░рд╕рдиреНрди', 'рд╕реБрдЦреА', 'рд╣рд░реНрд╖рд┐рдд', 'рдЖрдирдВрджрд┐рдд', 'рдордЬрд╛', 'рд╢реБрдХреНрд░рдЧреБрдЬрд╛рд░', 'рдЕрдЪреНрдЫрд╛'
  ],
  lonely: [
    'lonely', 'alone', 'isolated', 'abandoned', 'ignored', 'neglected',
    'родройро┐роорпИ', 'роЗроХрпНроХрпЛрогрооро╛роХ',
    'рдЕрдХреЗрд▓рд╛', 'рдПрдХрд╛рдХреА', 'рддрдиреНрд╣рд╛', 'рдЕрдирд╛рде', 'рдЕрд▓рдЧ', 'рдЙрдкреЗрдХреНрд╖рд┐рдд'
  ]
};

/**
 * Cleans and tokenizes multilingual input string.
 * - Normalizes Unicode (NFKC)
 * - Removes punctuation
 * - Lowers case
 * - Keeps Hindi, Tamil, and multi-language safe
 * @param {string} message
 * @returns {string[]} normalized keywords
 */
function cleanMessage(message = '') {
  if (typeof message !== 'string') return [];

  return message
    .toLowerCase()
    .normalize('NFKC') // Unicode-safe normalization
    .replace(/[^\p{L}\p{N}\s]/gu, '') // Remove punctuation but keep all scripts
    .split(/\s+/)
    .filter(Boolean); // Remove empty strings
}

/**
 * Detects primary emotion in a given message
 * @param {string} message
 * @returns {string} 'happy', 'sad', 'angry', 'anxious', 'lonely', or 'neutral'
 */
function detectEmotion(message) {
  const tokens = cleanMessage(message);

  if (!tokens.length) return 'neutral';

  for (const [emotion, keywords] of Object.entries(emotionKeywords)) {
    for (const keyword of keywords) {
      if (tokens.includes(keyword)) {
        return emotion;
      }
    }
  }

  return 'neutral'; // fallback always
}

export { detectEmotion };
